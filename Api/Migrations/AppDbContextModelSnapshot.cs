// <auto-generated />
using FileManager.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FileManager.Api.Models.FileModel", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderModelLocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolderModelName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RepositoryModelLocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RepositoryModelName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Location", "Name");

                    b.HasIndex("FolderModelLocation", "FolderModelName");

                    b.HasIndex("RepositoryModelLocation", "RepositoryModelName");

                    b.ToTable("FileModel");
                });

            modelBuilder.Entity("FileManager.Api.Models.FolderModel", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolderModelLocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolderModelName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RepositoryModelLocation")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RepositoryModelName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Location", "Name");

                    b.HasIndex("FolderModelLocation", "FolderModelName");

                    b.HasIndex("RepositoryModelLocation", "RepositoryModelName");

                    b.ToTable("FolderModel");
                });

            modelBuilder.Entity("FileManager.Api.Models.RepositoryModel", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserModelUsername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Location", "Name");

                    b.HasIndex("UserModelUsername");

                    b.ToTable("RepositoryModel");
                });

            modelBuilder.Entity("FileManager.Api.Models.UserModel", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FileManager.Api.Models.FileModel", b =>
                {
                    b.HasOne("FileManager.Api.Models.FolderModel", null)
                        .WithMany("Files")
                        .HasForeignKey("FolderModelLocation", "FolderModelName");

                    b.HasOne("FileManager.Api.Models.RepositoryModel", null)
                        .WithMany("Files")
                        .HasForeignKey("RepositoryModelLocation", "RepositoryModelName");
                });

            modelBuilder.Entity("FileManager.Api.Models.FolderModel", b =>
                {
                    b.HasOne("FileManager.Api.Models.FolderModel", null)
                        .WithMany("Folders")
                        .HasForeignKey("FolderModelLocation", "FolderModelName");

                    b.HasOne("FileManager.Api.Models.RepositoryModel", null)
                        .WithMany("Folders")
                        .HasForeignKey("RepositoryModelLocation", "RepositoryModelName");
                });

            modelBuilder.Entity("FileManager.Api.Models.RepositoryModel", b =>
                {
                    b.HasOne("FileManager.Api.Models.UserModel", null)
                        .WithMany("Repositories")
                        .HasForeignKey("UserModelUsername");
                });

            modelBuilder.Entity("FileManager.Api.Models.FolderModel", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Folders");
                });

            modelBuilder.Entity("FileManager.Api.Models.RepositoryModel", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Folders");
                });

            modelBuilder.Entity("FileManager.Api.Models.UserModel", b =>
                {
                    b.Navigation("Repositories");
                });
#pragma warning restore 612, 618
        }
    }
}
